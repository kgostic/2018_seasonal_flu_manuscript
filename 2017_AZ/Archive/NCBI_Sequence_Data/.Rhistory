sim.mat <- case.2$par.2$sim.2
## Prepare inputs into JAGS model:
######################################################################
# 1. DATA
# NN - needs to be a TTx99 matrix, with case age on columns and time of onset on rows.
#      The final function in Poisson_simulation_functions inserts 15 rows of 0s between each cluster of cases. These 0s span the maximum serial interval duration and thus make it impossible for the model to infer human-to-human transmission between clusters.
#
# hh - 1x98 vector of values used to calculate pp and qq within model (hh.)
# omega - scalar
# MM - 98x98 matrix
# gg - 1xs.max vector of serial interval values
# TT - total number of time steps in matrix NN
NN = sim.mat; dim(NN); sum(NN)
length(hh.group1)
length(hh.group2)
MM = matrix(1, 98, 98)
omega = eigen(MM, only.values = TRUE)$values[1]; omega
s.max
length(serial.interval)
TT = nrow(NN)
load('true_pars.RData')
alphas
deltas
### Case 1, par 1 (R0 = .3, lambda = .05/98)
best.lk = lk.poisson(pars = c('alpha' = alphas[1], 'delta' = deltas[1], 'R0' = .3, 'lambda' = .05/98), NN = case.1$par.1$sim.1, hh = hh.group1, mm = MM, omega = omega, gg = serial.interval, s.max = s.max)
test.alphas = matrix(seq(.05, 1, by = .05), nrow = 20, ncol = 20)
test.deltas = t(test.alphas)
test.lks = test.deltas*0
for(ii in 1:length(test.lks)){
test.lks[ii] = lk.poisson(pars = c('alpha' = test.alphas[ii], 'delta' = test.deltas[ii], 'R0' = .5, 'lambda' = .05/98), NN = case.1$par.1$sim.1, hh = hh.group1, mm = MM, omega = omega, gg = serial.interval, s.max = s.max)
}
tests = data.frame('alphas' = test.alphas, 'deltas' = test.deltas, 'lks' = test.lks)
contour(x = test.alphas[,1], y = test.deltas[1,], z = test.lks, xlim = c(.05, 1), ylim = c(.05, 1))
points(x = alphas[1], y = deltas[1], col = 'blue')
mm = which.min(test.lks)
points(test.alphas[mm], test.deltas[mm], col = 'red')
legend('topleft', c('true.best', 'est.best'), col = c('blue', 'red'), pch = 1)
## Test that the poisson neg log lk returns the maximum likelihood at the correct values
rm(list = ls())
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/')
load('Poisson_simulated_data.RData')
load('serial.int.max.RData') # Loads variable s.max
source('Inputs.R')
source('Poisson_neg_log_lk.R')
#library(rjags)
#library(coda)
set.seed(109)
#Saved data takes the following format:
# case.x is the outter-level list structure. There are 6 cases, each representing a different combination of R0 and spillover values
# par.x is the inner list structure. There are 5 tested combinations of alpha and delta parameters
# Each case.x$par.x is a list of five replicates of simulated data, each called sim.x
# sim.x is a 2D array of case incidence, with time indexed down the rows and case age across columns
# Overall data structure is case.x$par.x$sim.x ... 6 cases, 5 par sets, 5 simulations using each par set
# Visualize simulated data structure
ls(case.1)
ls(case.1$par.1)
head(case.2$par.4$sim.1)
# Work with just the first example for now to write code
sim.mat <- case.2$par.2$sim.2
## Prepare inputs into JAGS model:
######################################################################
# 1. DATA
# NN - needs to be a TTx99 matrix, with case age on columns and time of onset on rows.
#      The final function in Poisson_simulation_functions inserts 15 rows of 0s between each cluster of cases. These 0s span the maximum serial interval duration and thus make it impossible for the model to infer human-to-human transmission between clusters.
#
# hh - 1x98 vector of values used to calculate pp and qq within model (hh.)
# omega - scalar
# MM - 98x98 matrix
# gg - 1xs.max vector of serial interval values
# TT - total number of time steps in matrix NN
NN = sim.mat; dim(NN); sum(NN)
length(hh.group1)
length(hh.group2)
MM = matrix(1, 98, 98)
omega = eigen(MM, only.values = TRUE)$values[1]; omega
s.max
length(serial.interval)
TT = nrow(NN)
load('true_pars.RData')
alphas
deltas
### Case 1, par 1 (R0 = .3, lambda = .05/98)
best.lk = lk.poisson(pars = c('alpha' = alphas[1], 'delta' = deltas[1], 'R0' = .3, 'lambda' = .05/98), NN = case.1$par.1$sim.1, hh = hh.group1, mm = MM, omega = omega, gg = serial.interval, s.max = s.max)
test.alphas = matrix(seq(.05, 1, by = .05), nrow = 20, ncol = 20)
test.deltas = t(test.alphas)
test.lks = test.deltas*0
for(ii in 1:length(test.lks)){
test.lks[ii] = lk.poisson(pars = c('alpha' = test.alphas[ii], 'delta' = test.deltas[ii], 'R0' = .5, 'lambda' = 1/98), NN = case.1$par.1$sim.1, hh = hh.group1, mm = MM, omega = omega, gg = serial.interval, s.max = s.max)
}
tests = data.frame('alphas' = test.alphas, 'deltas' = test.deltas, 'lks' = test.lks)
contour(x = test.alphas[,1], y = test.deltas[1,], z = test.lks, xlim = c(.05, 1), ylim = c(.05, 1))
points(x = alphas[1], y = deltas[1], col = 'blue')
mm = which.min(test.lks)
points(test.alphas[mm], test.deltas[mm], col = 'red')
legend('topleft', c('true.best', 'est.best'), col = c('blue', 'red'), pch = 1)
pars.init
all.seq = read.csv('H1N1_01Jan1990_01Jan2000.txt')
all.seq = read.csv('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_01Jan1990_01Jan2000.txt')
all.seq
head(all.seq)
all.seq = read.csv('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_01Jan1990_01Jan2000.txt', header = TRUE)
head(all.seq)
?read.csv
all.seq = read.csv('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_01Jan1990_01Jan2000.txt', header = FALSE, col.names = c('Accession', 'Host', 'Length', 'Protein', 'Subtype', 'Country', 'Region', 'Date', 'VirusName', 'Mutations', 'Age', 'Gender', 'Lineage', 'VacStrain', 'Complete', 'NDuplicate'))
head(all.seq)
all.seq = read.csv('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = FALSE, col.names = c('Accession', 'Host', 'Length', 'Protein', 'Subtype', 'Country', 'Region', 'Date', 'VirusName', 'Mutations', 'Age', 'Gender', 'Lineage', 'VacStrain', 'Complete', 'NDuplicate'))
all.seq
head(all.seq)
all.seq = read.csv('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE)
head(all.seq)
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE)
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
head(all.seq)
all.seq$Age
dates = as.Date(all.seq$Date)
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
dates = as.Date(all.seq$Date)
all.seq$Date
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
dates = as.Date(all.seq$Date)
all.seq$Date
rm(list = ls)
rm(list = ls())
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
dates = as.Date(all.seq$Date)
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
dates = as.Date(all.seq$Date)
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
all.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
dates = as.Date(all.seq$Date)
all.seq$Year
getOption(max.print)
getOption('max.print')
?getOption
all.seq$Year[1000:2000]
unique(all.seq$Year)
table(all.seq$Year)
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t')
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year-H1.seq$Age
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
H1.seq$Year
H1.seq$Age
options(max.print = 10000)
H1.seq$Age
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
H1.seq$Year
H1.seq$Age
rm(list = ls())
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
H1.seq$Age
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
H1.seq$Age
rm(list = ls())
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
H1.seq$Age
rm(list = ls())
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
H1.seq$Age
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
for(ii in 1:length(unique(H1.seq$Year))){
dat = subset(H1.seq, Year == unique(H1.seq$Year)[ii])
hist(x = dat$BirthYear, breaks = 0:100)
}
for(ii in 1:length(unique(H1.seq$Year))){
dat = subset(H1.seq, Year == unique(H1.seq$Year)[ii])
hist(x = dat$BirthYear, breaks = 0:120)
}
for(ii in 1:length(unique(H1.seq$Year))){
dat = subset(H1.seq, Year == unique(H1.seq$Year)[ii])
hist(x = dat$BirthYear, breaks = 1900:2017)
}
dat$BirthYear
H1.seq$Year
valid = H1.seq$Year < 20
H1.seq$Year[valid] = H1.seq$Year[valid] + 2000
valid = H1.seq$Year >80
H1.seq$Year[valid] = H1.seq$Year[valid] + 1900
table(H1.seq$Year)
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
valid = H1.seq$Year < 20
H1.seq$Year[valid] = H1.seq$Year[valid] + 2000
valid = H1.seq$Year >80
H1.seq$Year[valid] = H1.seq$Year[valid] + 1900
table(H1.seq$Year)
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
H1.seq[year]
H1.seq$Year
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
valid = H1.seq$Year >80
H1.seq$Year[valid] = H1.seq$Year[valid] + 1900
valid = H1.seq$Year < 20
H1.seq$Year[valid] = H1.seq$Year[valid] + 2000
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
for(ii in 1:length(unique(H1.seq$Year))){
dat = subset(H1.seq, Year == unique(H1.seq$Year)[ii])
hist(x = dat$BirthYear, breaks = 1900:2017)
}
## Import all H1N1 sequences
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
valid = H1.seq$Year >80
H1.seq$Year[valid] = H1.seq$Year[valid] + 1900
valid = H1.seq$Year < 20
H1.seq$Year[valid] = H1.seq$Year[valid] + 2000
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
pdf('NCBI_dat.pdf')
par(mfrow = c(2,2))
for(ii in 1:length(unique(H1.seq$Year))){
dat = subset(H1.seq, Year == unique(H1.seq$Year)[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = unique(H1.seq$Year)[ii], xlab = 'Birth Year')
}
dev.off()
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
valid = H1.seq$Year >80
H1.seq$Year[valid] = H1.seq$Year[valid] + 1900
valid = H1.seq$Year < 20
H1.seq$Year[valid] = H1.seq$Year[valid] + 2000
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
pdf('H1N1_NCBI_dat.pdf')
par(mfrow = c(2,2))
for(ii in 1:length(unique(H1.seq$Year))){
dat = subset(H1.seq, Year == unique(H1.seq$Year)[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(unique(H1.seq$Year)[ii], 'N = ', nrow(dat)), xlab = 'Birth Year')
}
dev.off()
## Import all H1N1 sequences
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
valid = H1.seq$Year >80
H1.seq$Year[valid] = H1.seq$Year[valid] + 1900
valid = H1.seq$Year < 20
H1.seq$Year[valid] = H1.seq$Year[valid] + 2000
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
pdf('H1N1_NCBI_dat.pdf')
par(mfrow = c(2,2))
for(ii in 1:length(unique(H1.seq$Year))){
dat = subset(H1.seq, Year == unique(H1.seq$Year)[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(unique(H1.seq$Year)[ii], 'N = ', nrow(dat)), xlab = 'Birth Year')
}
dev.off()
yrs = sort(unique(H1.seq$Year))
## Import all H1N1 sequences
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
valid = H1.seq$Year >80
H1.seq$Year[valid] = H1.seq$Year[valid] + 1900
valid = H1.seq$Year < 20
H1.seq$Year[valid] = H1.seq$Year[valid] + 2000
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
yrs = sort(unique(H1.seq$Year))
pdf('H1N1_NCBI_dat.pdf')
par(mfrow = c(2,2))
for(ii in 1:length(yrs)){
dat = subset(H1.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
}
dev.off()
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
rm(list = ls())
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
head(H3.seq)
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
table(H3.seq$Year)
H3.seq$BirthYear = H3.seq$Year - H3.seq$Age
yrs = sort(unique(H3.seq$Year))
pdf('H3N2_NCBI_dat.pdf')
par(mfrow = c(2,2))
for(ii in 1:length(yrs)){
dat = subset(H3.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
}
dev.off()
H3.seq$BirthYear
unique(H3.seq$BirthYear)
H3.seq$Year
H3.seq$Age
yrs = sort(unique(H3.seq$Year))
pdf('H3N2_NCBI_dat.pdf')
par(mfrow = c(2,2))
for(ii in 1:length(yrs)){
dat = subset(H3.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
}
dat = subset(H3.seq, Year == yrs[ii])
ii
dat
which(is.na(H3.seq$BirthYear))
whichis.na(H3.seq$Age)
which(is.na(H3.seq$Age))
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
table(H3.seq$Year)
H3.seq$BirthYear = H3.seq$Year - H3.seq$Age
yrs = sort(unique(H3.seq$Year))
which(is.na(H3.seq$Age))
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
which(is.na(H3.seq$Age))
## Import all H3N2 sequences
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
table(H3.seq$Year)
H3.seq$BirthYear = H3.seq$Year - H3.seq$Age
yrs = sort(unique(H3.seq$Year))
pdf('H3N2_NCBI_dat.pdf')
par(mfrow = c(2,2))
for(ii in 1:length(yrs)){
dat = subset(H3.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
}
dev.off()
ii = 1
par(mfrow = c(2,2))
for(ii in 1:length(yrs)){
dat = subset(H3.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
}
ii = 1
dat = subset(H3.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
dev.off()
dev.off()
dat = subset(H3.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
ii = ii + 1
dat = subset(H3.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
ii = ii + 1
dat = subset(H3.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
dat = subset(H3.seq, Year == yrs[ii])
dat
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
hist(x = dat$BirthYear, breaks = 1890:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
pdf('H3N2_NCBI_dat.pdf')
par(mfrow = c(2,2))
for(ii in 1:length(yrs)){
dat = subset(H3.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1870:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
}
dev.off()
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
valid = H1.seq$Year >80
H1.seq$Year[valid] = H1.seq$Year[valid] + 1900
valid = H1.seq$Year < 20
H1.seq$Year[valid] = H1.seq$Year[valid] + 2000
H1.seq$Accession
uID = unique(H1.seq$Accession)
uID
ii = 1
valid = H1.seq$Accession == uID[ii]
keep[ii] = valid[1]
H1.seq$Accession
uID[ii]
valid = H1.seq$Accession == uID[ii]
valid = which(H1.seq$Accession == uID[ii])
valid
H1.seq$Accession[1:4]
uID = unique(H1.seq$Accession)
for(ii in 1:length(uID)){
valid = which(H1.seq$Accession == uID[ii])
keep[ii] = valid[1]
}
uID = unique(H1.seq$Accession)
keep = 1
for(ii in 1:length(uID)){
valid = which(H1.seq$Accession == uID[ii])
keep[ii] = valid[1]
}
keep
length(keep)
length(valid)
length(uID)
H1.seq = H1.seq[keep,]
nrow(H1.seq)
length(unique(H1.seq$Accession))
uID = unique(H3.seq$Accession)
keep = 1
for(ii in 1:length(uID)){
valid = which(H3.seq$Accession == uID[ii])
keep[ii] = valid[1]
}
H3.seq = H3.seq[keep,]
dim(H3.seq)
length(uID)
uID = unique(H3.seq$Accession)
uID
uID = unique(H3.seq$Acession)
keep = 1
for(ii in 1:length(uID)){
valid = which(H3.seq$Acession == uID[ii])
keep[ii] = valid[1]
}
H3.seq = H3.seq[keep,]
H3.seq$Acession
uID = unique(H3.seq$Acession)
keep = 1
for(ii in 1:length(uID)){
valid = which(H3.seq$Acession == uID[ii])
keep[ii] = valid[1]
}
H3.seq = H3.seq[keep,]
H3.seq
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
table(H3.seq$Year)
H3.seq$BirthYear = H3.seq$Year - H3.seq$Age
yrs = sort(unique(H3.seq$Year))
uID = unique(H3.seq$Acession)
keep = 1
for(ii in 1:length(uID)){
valid = which(H3.seq$Acession == uID[ii])
keep[ii] = valid[1]
}
H3.seq = H3.seq[keep,]
H3.seq
dim(H3.seq)
length(uID)
pdf('H3N2_NCBI_dat.pdf')
## Import all H1N1 sequences
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H1.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H1N1_combined_AGEINFO.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
valid = H1.seq$Year >80
H1.seq$Year[valid] = H1.seq$Year[valid] + 1900
valid = H1.seq$Year < 20
H1.seq$Year[valid] = H1.seq$Year[valid] + 2000
## Remove duplicate accession
uID = unique(H1.seq$Accession)
keep = 1
for(ii in 1:length(uID)){
valid = which(H1.seq$Accession == uID[ii])
keep[ii] = valid[1]
}
H1.seq = H1.seq[keep,]
table(H1.seq$Year)
H1.seq$BirthYear = H1.seq$Year - H1.seq$Age
yrs = sort(unique(H1.seq$Year))
pdf('H1N1_NCBI_dat.pdf')
par(mfrow = c(2,2))
for(ii in 1:length(yrs)){
dat = subset(H1.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1900:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
}
dev.off()
## Import all H3N2 sequences
setwd('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/')
H3.seq = read.table('~/Dropbox/R/2017_Branching_HA_Imprinting/NCBI_Sequence_Data/H3N2_combined_ALLAGES.txt', header = TRUE, sep = ',', stringsAsFactors = FALSE)
table(H3.seq$Year)
H3.seq$BirthYear = H3.seq$Year - H3.seq$Age
yrs = sort(unique(H3.seq$Year))
## Remove duplicates
uID = unique(H3.seq$Acession)
keep = 1
for(ii in 1:length(uID)){
valid = which(H3.seq$Acession == uID[ii])
keep[ii] = valid[1]
}
H3.seq = H3.seq[keep,]
pdf('H3N2_NCBI_dat.pdf')
par(mfrow = c(2,2))
for(ii in 1:length(yrs)){
dat = subset(H3.seq, Year == yrs[ii])
hist(x = dat$BirthYear, breaks = 1870:2017, main = paste(yrs[ii], ', N = ', nrow(dat)), xlab = 'Birth Year')
}
dev.off()
